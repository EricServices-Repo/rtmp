user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

worker_rlimit_nofile 65535;

events {
	worker_connections 768;
	multi_accept on;
}

http {
	sendfile off;		# Default=on. Toggles the use of sendfile. For optimal HLS delivery disable this.
	tcp_nopush on;		# Default=off. Sends the response header and beginning of a file in one packet. 
	tcp_nodelay on;		# Default=on. Forces a socket to send data in its buffer, whatever packet size. 
	server_tokens off;      # Default=on. Enables/disables the server signature.
	keepalive_timeout 65;
	types_hash_max_size 2048;
	server_name_in_redirect off;
	server_names_hash_bucket_size 64;
	default_type application/octet-stream;
	include mime.types;

	map $sent_http_content_type $expires {
    default 1d;
    application/vnd.apple.mpegurl epoch;
  }

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers on;
	
	#### This logging format is optimal for Amplify monitoring (https://amplify.nginx.com) ####
	log_format main	'$remote_addr - $remote_user [$time_local] "$request" '
			'$status $body_bytes_sent "$http_referer" '
			'"$http_user_agent" "$http_x_forwarded_for" $request_time';

	access_log /var/log/nginx/access.log main;
	error_log /var/log/nginx/error.log warn;

	gzip off;	# Compresses responses using gzip method. Helps to reduce size of transmitted data by half or more.

	include /etc/nginx/mime.types;		# This will include the mime.types. Do not remove this.

	server {
    listen 80;
    
    location / {
      root /var/ingest;
      expires $expires;
      allow all;

      # CORS setup
      add_header Cache-Control no-cache;	# Prevent caching of HLS fragments
      #add_header "Access-Control-Allow-Origin" *;
      #add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
      #add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
    }
    location /stat {
      rtmp_stat all;
      rtmp_stat_stylesheet stat.xsl;
      allow 127.0.0.1;
      deny all;
      add_header Refresh "10; $request_uri";
    }
    location /stat.xsl {
      root /var/www/html/;
    }
     location /nginx_status {
       allow 127.0.0.1;
       deny all;
       stub_status;
       access_log    off;
     }
   }
}

rtmp {
	access_log /var/log/nginx/access.log;
	
	server {
		listen 1935;
		chunk_size 4096;
		timeout 30s;
		buflen 1s;

		#### THE /LIVE APPLICATION WILL BE USED TO SEND OUR LIVESTREAM TO, INCLUDING A STREAMKEY. ####
		application ingest {					# The /live application will receive the incoming live-stream.
			live on;										# Enable/disable the live application.
			interleave off;							# Audio and video data is transmitted on the same RTMP chunk stream. Default=off.
			wait_key off;								# Makes video stream start with a key frame. Default=off.
			wait_video off;							# Disable audio until first video frame is sent (can cause delay). Default=off.
			idle_streams off;						# If disabled prevents viewers from connecting to idle/nonexistent streams and disconnects all. 
			drop_idle_publisher off;		# Drop publisher that has been idle for this time.
			allow publish all;					# ONLY ALLOW ALL ON INGEST NODES!
			#deny publish all;
			allow play 127.0.0.1;		# Diables direct playback and restricts it to localhost. To allow all playback change to: all

			on_publish http://127.0.0.1:8081/auth/;			#Authenticate Stream Key

			#### Forward RTMP Stream to Origin Server ####
			push rtmp://origin-server/origin;
		}
	}
}
